
@{
    ViewData["Title"] = "About";
}

<div class="text-center">
    <h1 class="display-4">About</h1>        
</div>
<div class="text-body">
    <p>
        This excersice is about create webapp application using .NET Core, ASP.NET Core, C# and the MVC architectural design pattern.
    </p>
    <table class="table">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Task</th>
                <th scope="col">Grade</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th scope="row">1</th>
                <td>Create a web application that uses your account database.</td>
                <td>3</td>
            </tr>
            <tr>
                <th scope="row">2</th>
                <td>
                    Create a page to your application, name it "About" and put some basic text in it, describing this exercise.
                </td>
                <td>3</td>

            </tr>
            <tr>
                <th scope="row">3</th>
                <td>In the Home page, generate a HTML table of all accounts, read data from the json file. Use a Model class for Account and a Service class for the json file reader</td>
                <td>3</td>
            </tr>
            <tr>
                <th scope="row">4</th>
                <td>In the Home page, generate a HTML table of all accounts, read data from the json file. Use a Model class for Account and a Service class for the json file reader.</td>
                <td>3</td>
            </tr>
            <tr>
                <th scope="row">5</th>
                <td>Add a controller that provides a json response with all accounts, add it to the path api/accounts.</td>
                <td>3</td>
            </tr>
            <tr>
                <th scope="row">6</th>
                <td>Add a controller, to handle the route api/account/&lt;number&gt; which shows the account details for that particular account. For example, the path api/account/111111 show a json response with all details on that account. Proved an error message, as json, when the account number does not exists.</td>
                <td>3</td>
            </tr>
            <tr>
                <th scope="row">7</th>
                <td>Update the navigation and add links to all your pages and routes.</td>
                <td>3</td>
            </tr>
            <tr>
                <th scope="row">8</th>
                <td>Add a controller that supports moving between two accounts. You may choose to solve this using the rest api or through a html form. However, use a post method in any case.</td>
                <td>4</td>
            </tr>
            <tr>
                <th scope="row">9</th>
                <td>
                    Make it possible to move money between accounts using both a HTML post form and through the JSON REST API. Use controllers and models to separate your code and use Razor for the html form pages.                    
                </td>
                <td>5</td>
            </tr>
            <tr>
                <th scope="row">10</th>
                <td>                   
                    Ensure you are reusing your code, avoid duplicate code.
                </td>
                <td>5</td>
            </tr>
        </tbody>
    </table>

    
    .
    
    
        
        
</div>





